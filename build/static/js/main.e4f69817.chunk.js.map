{"version":3,"sources":["Message.js","firebase.js","main.jpg","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","style","backgroundImage","background","src","alt","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAmBeA,EAfCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QACtBC,EADmD,EAApBC,WACTF,EAAQE,SACpC,OACE,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACE,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACE,cAACI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAjD,WACIR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MADH,IAC2DF,EAAQA,oB,QCE9DU,EAXKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,QCZR,MAA0B,iCCmF1BC,MAxEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiByB,EAAjB,KA4BA,OA1BAC,qBAAU,WACRlB,EAAGmB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXN,EACEM,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAAEC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAG5D,IAEHT,qBAAU,WACRD,EAAYW,OAAO,iCAClB,IAeD,sBAAKC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAA0BtC,UAAU,MAAjE,UACE,qBACEA,UAAU,kBACVuC,IAAI,2GACJC,IAAI,4BAER,oBAAIxC,UAAU,aAAd,mCACE,uEACA,0CAAaD,KACb,sBAAMC,UAAU,YAAhB,SACE,eAACyC,EAAA,EAAD,CAAazC,UAAU,mBAAvB,UACE,cAAC0C,EAAA,EAAD,CACE1C,UAAU,aACV2C,YAAY,uBACZC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAWzB,EAASyB,EAAMC,OAAOH,UAG7C,cAACI,EAAA,EAAD,CACEhD,UAAU,kBACViD,UAAW7B,EACXf,QAAQ,YACRD,MAAM,WACN8C,KAAK,SACLC,QArCU,SAACL,GACnBA,EAAMM,iBAEN7C,EAAGmB,WAAW,YAAY2B,IAAI,CAC5BxD,QAASuB,EACTrB,SAAUA,EACVuD,UAAW9C,IAASS,UAAUsC,WAAWC,oBAG3CnC,EAAS,KAsBH,SAQE,cAAC,IAAD,WAKN,cAAC,IAAD,UACGC,EAASS,KAAI,gBAAGE,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,QAAP,OACZ,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCoC,YChETwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4f69817.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = forwardRef(({ message, username }, ref) => {\r\n  const isUser = username === message.username;\r\n  return (\r\n    <div ref={ref} className={`message ${isUser && \"message__user\"}`}>\r\n      <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n        <CardContent>\r\n          <Typography color=\"white\" variant=\"h5\" component=\"h2\">\r\n            {!isUser && `${message.username || \"Unknown User\" }: `} {message.message}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Message;","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDkax29m4a4vRo3weDcEaGR9C9UY8pn_XY\",\r\n    authDomain: \"messenger-clone-c01c8.firebaseapp.com\",\r\n    projectId: \"messenger-clone-c01c8\",\r\n    storageBucket: \"messenger-clone-c01c8.appspot.com\",\r\n    messagingSenderId: \"177288502738\",\r\n    appId: \"1:177288502738:web:f50db1763e0c8f6ab3bc0b\",\r\n    measurementId: \"G-R3LFZT6XJG\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;\r\n","export default __webpack_public_path__ + \"static/media/main.60f0cc5d.jpg\";","import React, { useState, useEffect } from \"react\";\nimport {FormControl, Input } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport background from \"./main.jpg\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    setUsername(prompt(\"Please enter your username\"));\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <div style={{ backgroundImage: `url(${background})` }} className=\"App\">\n      <img\n        className=\"messenger__logo\"\n        src=\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=120&h=100\"\n        alt=\"facebook messenger logo\"\n      />\n    <h1 className=\"app__title\">React Messenger Clone</h1>\n      <h4>Developed By Aneeq Fayyaz Karim Malik</h4>\n      <h2>Welcome {username}</h2>\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input\n            className=\"app__input\"\n            placeholder=\"Enter a message.....\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n\n          <IconButton\n            className=\"app__iconButton\"\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary \"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n      <FlipMove>\n        {messages.map(({ id, message }) => (\n          <Message key={id} username={username} message={message} />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}